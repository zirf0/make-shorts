#!/bin/bash
. function
# get part from youtube
YT='yt-dlp'
TMP='tmp.tmp'

# $1 is start time $2 is end time $3 is url

if [ -z $4 ];
then 
echo -e "Usage:\n${BLUE}vpart  url start_time duration outfile"${NC} 
echo
echo -e "Example:\n${YELLOW}vpart  https://youtu.be/ETA6P3sNqQY 1:00 10 out.mp4"${NC}
echo -e "Example:\n${YELLOW}vpart  https://youtu.be/ETA6P3sNqQY 1:00 ${BLUE}full${YELLOW} out.mp4"${NC}
exit
fi


url=$1
start_time=$2
duration=$3
out_file=$4

# get  lenght

#len=$($YT $url --skip-download -j | jq | awk '/duration_string/{gsub(/"|,/,"",$2); print $2}')
yt_video_len len $url

#parse option

if [[ "$duration" == "full" ]]; then 
duration=$len
fi
# out data
echo -e "${YELLOW} Start time: $start_time Duration: $duration ${NC}"
sleep 3


$YT --youtube-skip-dash-manifest -g $url > $TMP # get video and audio urls
video=$(head -n 1 $TMP)
audio=$(tail -n 1 $TMP)
	
ffmpeg -ss "$start_time"  -i $video -ss "$start_time" -i $audio -map 0:v -map 1:a -t "$duration" -c:v libx264 -y $out_file
rm $TMP
